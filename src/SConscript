Import('coverage')
Import('env')

env = env.Clone()

env.Append(CPPDEFINES=['QUEX_OPTION_ASSERTS_DISABLED',
                       'QUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED'])

lex_src = env.Quex(source='lexer.qx',
                   QUEXENGINE='lexer',
                   QUEXLANG='C',
                   QUEXOUTDIR=Dir('quex').abspath,
                   QUEXFLAGS=['--buffer-element-size 1',
                              '--codec utf8',
                              '--no-warning-on-no-token-queue',
                              '--token-class token',
                              '--token-id-prefix TKN_',
                              '--token-policy single',
                              '--token-memory-management-by-user'])

if coverage:
    env.AppendUnique(CCFLAGS=['-fprofile-arcs',
                              '-ftest-coverage'])

rose_lib = env.StaticLibrary(target='rose',
                             source=[Glob('*.c'),
                                     Glob('lib/*.c'),
                                     Glob('quex/*.c')])

env.Depends(target=rose_lib, dependency=lex_src)

Return('rose_lib')

# vim:ft=python
