start = PROGRAM;

header {
#include <cstdlib>  // C++ adapted 'stdlib.h'
//                  // gets:  atoi(const char*) 
}

define {
    // \G{Nd}       is the set of characters with the general category property 'decimal number'
    // [\X0-\XFFFF] is the set of characters below 0-65536 to restrict characters to two bytes.

    THAI               [: intersection(\P{Script=Thai},       [\X0-\XFFFF]) :]
    LATIN              [: intersection(\P{Script=Latin},      [\X0-\XFFFF]) :]
    ARABIC             [: intersection(\P{Block=Arabic},      [\X0-\XFFFF]) :]
    GREEK              [: intersection(\P{Script=Greek},      [\X0-\XFFFF]) :]
    DEVANAGARI         [: intersection(\P{Script=Devanagari}, [\X0-\XFFFF]) :]

    LATIN_DIGIT        [: [0-9] :]
    THAI_DIGIT         [: intersection({THAI},       \G{Nd})                :]
    ARABIC_DIGIT       [: intersection({ARABIC},     \G{Nd}, [\X660-\X6D0]) :]
    DEVANGARI_DIGIT    [: intersection({DEVANAGARI}, \G{Nd})                :]

    LATIN_NUMBER       ({LATIN_DIGIT}+".")?{LATIN_DIGIT}+
    THAI_NUMBER        ({THAI_DIGIT}+".")?{THAI_DIGIT}+
    ARABIC_NUMBER      ({ARABIC_DIGIT}+".")?{ARABIC_DIGIT}+
    DEVANGARI_NUMBER   ({DEVANGARI_DIGIT}+".")?{DEVANGARI_DIGIT}+

    LATIN_ID_START     [: intersection({LATIN}, \P{ID_Start})    :]
    LATIN_ID_CONTINUE  [: intersection({LATIN}, \P{ID_Continue}) :]
    LATIN_IDENTIFIER   {LATIN_ID_START}{LATIN_ID_CONTINUE}*

    GREEK_ID_START     [: intersection({GREEK}, \P{ID_Start})    :]
    GREEK_ID_CONTINUE  [: intersection({GREEK}, \P{ID_Continue}) :]
    GREEK_IDENTIFIER   {GREEK_ID_START}{GREEK_ID_CONTINUE}*
}

token {
    NUMBER;
    OK;
    COPYRIGHT;
    DJAMEEL;
    ALPHA;
    INFINITY;
    CLOSE_FRENCH_QUOTE;
    OPEN_FRENCH_QUOTE;
    L_BRACKET;
    R_BRACKET;
    ARROW;
    DEGREE_CELSIUS;
    PI;
    ALLMOST_EQUAL;
    LATIN_IDENTIFIER;
    LATIN_NUMBER;
    GREEK_IDENTIFIER;
    ARABIC_NUMBER;
    DEVANGARI_NUMBER;
    THAI_NUMBER;
    GREEK_IDENTIFIER;
}

